.image-carousel {
  width: 100%;
  height: 100%;
  opacity: 1;
  &:hover {
    .carousel-control {
      display: block;
    }
  }

  .item {
    transition: opacity ease-out .7s, visibility 0.7s;
    left: 0;
    opacity: 0;
    // Need opacity for the transition, and visibility to hide the inactive ones so links don't overlap.
    visibility: hidden;
    top: 0;
    position: absolute;
    width: 100%;
    height: 100%;
    display: block;
    &:first-child {
      top: auto;
      opacity: 1;
      position: relative;
    }
    &.active {
      opacity:1;
      visibility: visible;
    }
  }

  .carousel-inner {
    height: 100%;

    .item {
      text-align: center;

      & > img {
        height: inherit;
      }
    }
  }

  .carousel-caption {
    left: auto;
    width: auto;
    margin-right: 20px;
    right: 3%;
    bottom: 3%;
    top: auto; //Override from above
    font-family: @font_vaud_medium;
    font-size: 16px;
  }

  .carousel-indicators {
    display: none;
  }

  .image-carousel-header-banner {
    position: absolute;
    top: 0;
    background-color: rgba(0,0,0,0.3);
    z-index: 5;
    width: 100%;
    height: 42px;
  }

  .image-carousel-header {
    position: absolute;
    margin: 10px 0 10px 25px;
    font-family: @font_vaud;
    color: @white;
    font-weight: normal;
    font-size: 1.17em;
  }

  .image-carousel-caption-text {
    a, a:visited {
      color: inherit;
      &:hover {
        text-decoration: none;
      }
    }
  }
}

// For landscape-mode phones:
// rrollins 2017-10-19: Except, no, because these rules apply on portrait tablets, too. However, the behavior we get
// with these rules IS what we want, even though it's applying to more than we say it should be.
@media (min-width: @screen-phone)
        and (max-width: @screen-tablet) {
  .block-ImageCarouselBlock {
    img {
      width: 100%;
      height: auto;
    }
  }
}

@media (max-width: @small_viewport) {
  .block-ImageCarouselBlock {
    img {
      width: 100%;
      height: auto;
    }
  }
}
